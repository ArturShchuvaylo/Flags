{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/WEB/React/countries' flag/src/components/CountriesList.jsx\",\n    _s = $RefreshSig$();\n\nimport { List } from '../components/List';\nimport { Card } from '../components/Card';\nimport { selectCountriesInfo, selectVisiableCountries } from '../store/contriesSlice/contriesSlice';\nimport { loadAllCountries } from '../store/contriesSlice/contriesSlice';\nimport { selectControls } from '../store/controls/controlsSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CountriesList = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    search,\n    region\n  } = useSelector(selectControls);\n  const countries = useSelector(state => selectVisiableCountries(state, {\n    search,\n    region\n  }));\n  const {\n    status,\n    error,\n    qty\n  } = useSelector(selectCountriesInfo);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!qty) {\n      dispatch(loadAllCountries());\n    }\n  }, [qty, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Can't get data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), !countries.length && /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \" There is no such a country... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }, this), status === 'received' && /*#__PURE__*/_jsxDEV(List, {\n      children: countries.map(c => {\n        const countryInfo = {\n          img: c.flags.png,\n          name: c.name,\n          info: [{\n            title: 'Population',\n            description: c.population.toLocaleString()\n          }, {\n            title: 'Region',\n            description: c.region\n          }, {\n            title: 'Capital',\n            description: c.capital\n          }]\n        };\n        return /*#__PURE__*/_jsxDEV(Card, {\n          onClick: () => navigate(`/country/${c.name}`),\n          ...countryInfo\n        }, c.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CountriesList, \"HiijJq14HEzvRUskNNTbZQVnUD8=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = CountriesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountriesList\");","map":{"version":3,"sources":["/Users/admin/Documents/WEB/React/countries' flag/src/components/CountriesList.jsx"],"names":["List","Card","selectCountriesInfo","selectVisiableCountries","loadAllCountries","selectControls","useNavigate","useDispatch","useSelector","useEffect","CountriesList","navigate","search","region","countries","state","status","error","qty","dispatch","length","textAlign","map","c","countryInfo","img","flags","png","name","info","title","description","population","toLocaleString","capital"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,oBAArB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,mBAAT,EAA8BC,uBAA9B,QAA6D,sCAA7D;AACA,SAASC,gBAAT,QAAiC,sCAAjC;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAEjC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBL,WAAW,CAACH,cAAD,CAAtC;AACA,QAAMS,SAAS,GAAGN,WAAW,CAACO,KAAK,IAAIZ,uBAAuB,CAACY,KAAD,EAAQ;AAAEH,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAR,CAAjC,CAA7B;AACA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBV,WAAW,CAACN,mBAAD,CAA1C;AACA,QAAMiB,QAAQ,GAAGZ,WAAW,EAA5B;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,GAAL,EAAU;AACRC,MAAAA,QAAQ,CAACf,gBAAgB,EAAjB,CAAR;AACD;AACF,GAJQ,EAIN,CAACc,GAAD,EAAMC,QAAN,CAJM,CAAT;AAMA,sBACE;AAAA,eACGF,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADZ,EAEG,CAACH,SAAS,CAACM,MAAX,iBAAqB;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFxB,EAGGL,MAAM,KAAK,UAAX,iBACC,QAAC,IAAD;AAAA,gBACGF,SAAS,CAACQ,GAAV,CAAeC,CAAD,IAAO;AACpB,cAAMC,WAAW,GAAG;AAClBC,UAAAA,GAAG,EAAEF,CAAC,CAACG,KAAF,CAAQC,GADK;AAElBC,UAAAA,IAAI,EAAEL,CAAC,CAACK,IAFU;AAGlBC,UAAAA,IAAI,EAAE,CACJ;AACEC,YAAAA,KAAK,EAAE,YADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACS,UAAF,CAAaC,cAAb;AAFf,WADI,EAKJ;AACEH,YAAAA,KAAK,EAAE,QADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACV;AAFjB,WALI,EASJ;AACEiB,YAAAA,KAAK,EAAE,SADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACW;AAFjB,WATI;AAHY,SAApB;AAmBA,4BACE,QAAC,IAAD;AAEE,UAAA,OAAO,EAAE,MAAMvB,QAAQ,CAAE,YAAWY,CAAC,CAACK,IAAK,EAApB,CAFzB;AAAA,aAGMJ;AAHN,WACOD,CAAC,CAACK,IADT;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OA3BA;AADH;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADF;AA0CD,CAxDM;;GAAMlB,a;UAEMJ,W,EACUE,W,EACTA,W,EACaA,W,EACdD,W;;;KANNG,a","sourcesContent":["import { List } from '../components/List';\nimport { Card } from '../components/Card';\nimport { selectCountriesInfo, selectVisiableCountries } from '../store/contriesSlice/contriesSlice';\nimport { loadAllCountries } from '../store/contriesSlice/contriesSlice';\nimport { selectControls } from '../store/controls/controlsSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nexport const CountriesList = () => {\n\n  const navigate = useNavigate();\n  const { search, region } = useSelector(selectControls);\n  const countries = useSelector(state => selectVisiableCountries(state, { search, region }));\n  const { status, error, qty } = useSelector(selectCountriesInfo)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (!qty) {\n      dispatch(loadAllCountries())\n    }\n  }, [qty, dispatch])\n\n  return (\n    <>\n      {error && <h2>Can't get data</h2>}\n      {!countries.length && <h2 style={{ textAlign: 'center' }}> There is no such a country... </h2>}\n      {status === 'received' && (\n        <List>\n          {countries.map((c) => {\n            const countryInfo = {\n              img: c.flags.png,\n              name: c.name,\n              info: [\n                {\n                  title: 'Population',\n                  description: c.population.toLocaleString(),\n                },\n                {\n                  title: 'Region',\n                  description: c.region,\n                },\n                {\n                  title: 'Capital',\n                  description: c.capital,\n                },\n              ],\n            };\n\n            return (\n              <Card\n                key={c.name}\n                onClick={() => navigate(`/country/${c.name}`)}\n                {...countryInfo}\n              />\n            );\n          })}\n        </List>\n\n\n      )}\n    </>\n  )\n\n\n}"]},"metadata":{},"sourceType":"module"}