{"ast":null,"code":"import{createAsyncThunk,createSlice}from\"@reduxjs/toolkit\";export var loadCountryByName=createAsyncThunk('loadCountryByName',function(name,_ref){var _ref$extra=_ref.extra,client=_ref$extra.client,api=_ref$extra.api;return client.get(api.searchByCountry(name));});export var loadNeighborsCountries=createAsyncThunk('loadNeighborsCountries',function(border,_ref2){var _ref2$extra=_ref2.extra,client=_ref2$extra.client,api=_ref2$extra.api;return client.get(api.filterByCode(border));});var initialState={currentCountry:null,status:'idle',error:null,neighbors:[]};export var detailsSlice=createSlice({name:'details',initialState:initialState,reducers:{clearDetails:function clearDetails(){return initialState;}},extraReducers:function extraReducers(builder){builder.addCase(loadCountryByName.pending,function(state,action){state.status='loading';}).addCase(loadCountryByName.fulfilled,function(state,action){state.status='idle';state.currentCountry=action.payload.data[0];}).addCase(loadCountryByName.rejected,function(state,action){state.status='rejected';state.error=action.payload;}).addCase(loadNeighborsCountries.fulfilled,function(state,action){state.neighbors=action.payload.data.map(function(elem){return elem.name;});});}});var clearDetails=detailsSlice.actions.clearDetails;export{clearDetails};export var detailsReducer=detailsSlice.reducer;export var selectCurrentCountry=function selectCurrentCountry(state){return state.details.currentCountry;};export var selectDetails=function selectDetails(state){return state.details;};export var selectNeighbors=function selectNeighbors(state){return state.details.neighbors;};","map":{"version":3,"sources":["/Users/admin/Documents/WEB/React/FlagsOfCountries/src/store/detailsSlice/detailsSlice.js"],"names":["createAsyncThunk","createSlice","loadCountryByName","name","extra","client","api","get","searchByCountry","loadNeighborsCountries","border","filterByCode","initialState","currentCountry","status","error","neighbors","detailsSlice","reducers","clearDetails","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","data","rejected","map","elem","actions","detailsReducer","reducer","selectCurrentCountry","details","selectDetails","selectNeighbors"],"mappings":"AAAA,OAASA,gBAAT,CAA2BC,WAA3B,KAA8C,kBAA9C,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,CAAGF,gBAAgB,CAC7C,mBAD6C,CAE7C,SAACG,IAAD,MAA6B,qBAAtBC,KAAsB,CAAfC,MAAe,YAAfA,MAAe,CAARC,GAAQ,YAARA,GAAQ,CACzB,MAAOD,CAAAA,MAAM,CAACE,GAAP,CAAWD,GAAG,CAACE,eAAJ,CAAoBL,IAApB,CAAX,CAAP,CACH,CAJ4C,CAA1C,CAMP,MAAO,IAAMM,CAAAA,sBAAsB,CAAIT,gBAAgB,CACnD,wBADmD,CAEnD,SAACU,MAAD,OAA+B,uBAAtBN,KAAsB,CAAfC,MAAe,aAAfA,MAAe,CAARC,GAAQ,aAARA,GAAQ,CAC3B,MAAOD,CAAAA,MAAM,CAACE,GAAP,CAAWD,GAAG,CAACK,YAAJ,CAAkBD,MAAlB,CAAX,CAAP,CACH,CAJkD,CAAhD,CAOP,GAAME,CAAAA,YAAY,CAAG,CAClBC,cAAc,CAAE,IADE,CAElBC,MAAM,CAAC,MAFW,CAGlBC,KAAK,CAAE,IAHW,CAIlBC,SAAS,CAAC,EAJQ,CAArB,CAOA,MAAO,IAAMC,CAAAA,YAAY,CAAGhB,WAAW,CAAC,CACpCE,IAAI,CAAC,SAD+B,CAEpCS,YAAY,CAAZA,YAFoC,CAGpCM,QAAQ,CAAC,CACLC,YAAY,CAAC,8BAAIP,CAAAA,YAAJ,EADR,CAH2B,CAMpCQ,aAAa,CAAC,uBAACC,OAAD,CAAW,CACrBA,OAAO,CACNC,OADD,CACSpB,iBAAiB,CAACqB,OAD3B,CACmC,SAACC,KAAD,CAAQC,MAAR,CAAiB,CAChDD,KAAK,CAACV,MAAN,CAAa,SAAb,CACH,CAHD,EAICQ,OAJD,CAISpB,iBAAiB,CAACwB,SAJ3B,CAIqC,SAACF,KAAD,CAAQC,MAAR,CAAiB,CAClDD,KAAK,CAACV,MAAN,CAAa,MAAb,CACAU,KAAK,CAACX,cAAN,CAAqBY,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoB,CAApB,CAArB,CACH,CAPD,EAQCN,OARD,CAQSpB,iBAAiB,CAAC2B,QAR3B,CAQoC,SAACL,KAAD,CAAQC,MAAR,CAAiB,CACjDD,KAAK,CAACV,MAAN,CAAa,UAAb,CACAU,KAAK,CAACT,KAAN,CAAYU,MAAM,CAACE,OAAnB,CACH,CAXD,EAYCL,OAZD,CAYSb,sBAAsB,CAACiB,SAZhC,CAY0C,SAACF,KAAD,CAAQC,MAAR,CAAiB,CACvDD,KAAK,CAACR,SAAN,CAAkBS,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBE,GAApB,CAAwB,SAAAC,IAAI,QAAEA,CAAAA,IAAI,CAAC5B,IAAP,EAA5B,CAAlB,CAEH,CAfD,EAgBH,CAvBmC,CAAD,CAAhC,CA0BA,GAAOgB,CAAAA,YAAP,CAAuBF,YAAY,CAACe,OAApC,CAAOb,YAAP,C,qBACP,MAAO,IAAMc,CAAAA,cAAc,CAAEhB,YAAY,CAACiB,OAAnC,CAIP,MAAO,IAAMC,CAAAA,oBAAoB,CAAC,QAArBA,CAAAA,oBAAqB,CAACX,KAAD,QAASA,CAAAA,KAAK,CAACY,OAAN,CAAcvB,cAAvB,EAA3B,CACP,MAAO,IAAMwB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACb,KAAD,QAASA,CAAAA,KAAK,CAACY,OAAf,EAAtB,CACP,MAAO,IAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACd,KAAD,QAASA,CAAAA,KAAK,CAACY,OAAN,CAAcpB,SAAvB,EAAxB","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const loadCountryByName = createAsyncThunk(\n    'loadCountryByName',\n    (name,{extra:{client,api}})=>{\n        return client.get(api.searchByCountry(name))\n    }\n)\nexport const loadNeighborsCountries  = createAsyncThunk(\n    'loadNeighborsCountries',\n    (border,{extra:{client,api}})=>{\n        return client.get(api.filterByCode (border))\n    }\n)\n\nconst initialState = {\n   currentCountry: null,\n   status:'idle',\n   error: null, \n   neighbors:[],\n}\n\nexport const detailsSlice = createSlice({\n    name:'details',\n    initialState,\n    reducers:{\n        clearDetails:()=>initialState,\n    },\n    extraReducers:(builder)=>{\n        builder\n        .addCase(loadCountryByName.pending,(state, action)=>{\n            state.status='loading';\n        })\n        .addCase(loadCountryByName.fulfilled,(state, action)=>{\n            state.status='idle';\n            state.currentCountry=action.payload.data[0];\n        })\n        .addCase(loadCountryByName.rejected,(state, action)=>{\n            state.status='rejected';\n            state.error=action.payload;\n        })\n        .addCase(loadNeighborsCountries.fulfilled,(state, action)=>{\n            state.neighbors = action.payload.data.map(elem=>elem.name)\n            \n        })\n    }\n})\n\nexport const {clearDetails} = detailsSlice.actions;\nexport const detailsReducer =detailsSlice.reducer;\n\n\n\nexport const selectCurrentCountry=(state)=>state.details.currentCountry;\nexport const selectDetails = (state)=>state.details;\nexport const selectNeighbors = (state)=>state.details.neighbors;"]},"metadata":{},"sourceType":"module"}