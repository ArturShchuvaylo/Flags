{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/admin/Documents/WEB/React/The_World/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9;import styled from'styled-components';import{useDispatch,useSelector}from'react-redux';import{useEffect}from'react';import{selectNeighbors}from'../store/detailsSlice/detailsSlice';import{loadNeighborsCountries}from'../store/detailsSlice/detailsSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Wrapper=styled.section(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-top: 3rem;\\n  width: 100%;\\n  display: grid;\\n  grid-template-columns: 100%;\\n  gap: 2rem;\\n\\n  @media (min-width: 767px) {\\n    grid-template-columns: minmax(100px, 400px) 1fr;\\n    align-items: center;\\n    gap: 5rem;\\n  }\\n  @media (min-width: 1024px) {\\n    grid-template-columns: minmax(400px, 600px) 1fr;\\n  }\\n\"])));var InfoImage=styled.img(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n  object-fit: contain;\\n\"])));var InfoTitle=styled.h1(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin: 0;\\n  font-weight: var(--fw-normal);\\n\"])));var ListGroup=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\\n  gap: 2rem;\\n\\n  @media (min-width: 1024px) {\\n    flex-direction: row;\\n    gap: 4rem;\\n  }\\n\"])));var List=styled.ul(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n\"])));var ListItem=styled.li(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  line-height: 1.8;\\n\\n  & > b {\\n    font-weight: var(--fw-bold);\\n  }\\n\"])));var Meta=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  margin-top: 3rem;\\n  display: flex;\\n  gap: 1.5rem;\\n  flex-direction: column;\\n  align-items: flex-start;\\n\\n  & > b {\\n    font-weight: var(--fw-bold);\\n  }\\n\\n  @media (min-width: 767px) {\\n    flex-direction: row;\\n    align-items: center;\\n  }\\n\"])));var TagGroup=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 1rem;\\n  flex-wrap: wrap;\\n\"])));var Tag=styled.span(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  padding: 0 1rem;\\n  background-color: var(--colors-ui-base);\\n  box-shadow: var(--shadow);\\n  line-height: 1.5;\\n  cursor: pointer;\\n\"])));export var Info=function Info(_ref){var name=_ref.name,nativeName=_ref.nativeName,flag=_ref.flag,capital=_ref.capital,population=_ref.population,region=_ref.region,subregion=_ref.subregion,topLevelDomain=_ref.topLevelDomain,_ref$currencies=_ref.currencies,currencies=_ref$currencies===void 0?[]:_ref$currencies,_ref$languages=_ref.languages,languages=_ref$languages===void 0?[]:_ref$languages,_ref$borders=_ref.borders,borders=_ref$borders===void 0?[]:_ref$borders,push=_ref.push;var dispatch=useDispatch();var neighbors=useSelector(selectNeighbors);useEffect(function(){if(borders.length){dispatch(loadNeighborsCountries(borders));}},[borders,dispatch]);return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(InfoImage,{src:flag,alt:name}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(InfoTitle,{children:name}),/*#__PURE__*/_jsxs(ListGroup,{children:[/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Native Name:\"}),\" \",nativeName]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Population\"}),\" \",population]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Region:\"}),\" \",region]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Sub Region:\"}),\" \",subregion]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Capital:\"}),\" \",capital]})]}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Top Level Domain\"}),' ',topLevelDomain.map(function(d){return/*#__PURE__*/_jsx(\"span\",{children:d},d);})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Currency\"}),' ',currencies.map(function(c){return/*#__PURE__*/_jsxs(\"span\",{children:[c.name,\" \"]},c.code);})]}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Top Level Domain\"}),' ',languages.map(function(l){return/*#__PURE__*/_jsx(\"span\",{children:l.name},l.name);})]})]})]}),/*#__PURE__*/_jsxs(Meta,{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Border Countries\"}),!borders.length?/*#__PURE__*/_jsx(\"span\",{children:\"There is no border countries\"}):/*#__PURE__*/_jsx(TagGroup,{children:neighbors.map(function(countryName){return/*#__PURE__*/_jsx(Tag,{onClick:function onClick(){return push(\"/country/\".concat(countryName));},children:countryName},countryName);})})]})]})]});};","map":{"version":3,"sources":["/Users/admin/Documents/WEB/React/The_World/src/components/Info.jsx"],"names":["styled","useDispatch","useSelector","useEffect","selectNeighbors","loadNeighborsCountries","Wrapper","section","InfoImage","img","InfoTitle","h1","ListGroup","div","List","ul","ListItem","li","Meta","TagGroup","Tag","span","Info","name","nativeName","flag","capital","population","region","subregion","topLevelDomain","currencies","languages","borders","push","dispatch","neighbors","length","map","d","c","code","l","countryName"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { selectNeighbors } from '../store/detailsSlice/detailsSlice';\nimport { loadNeighborsCountries } from '../store/detailsSlice/detailsSlice';\n\nconst Wrapper = styled.section`\n  margin-top: 3rem;\n  width: 100%;\n  display: grid;\n  grid-template-columns: 100%;\n  gap: 2rem;\n\n  @media (min-width: 767px) {\n    grid-template-columns: minmax(100px, 400px) 1fr;\n    align-items: center;\n    gap: 5rem;\n  }\n  @media (min-width: 1024px) {\n    grid-template-columns: minmax(400px, 600px) 1fr;\n  }\n`;\n\nconst InfoImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n`;\n\nconst InfoTitle = styled.h1`\n  margin: 0;\n  font-weight: var(--fw-normal);\n`;\n\nconst ListGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  gap: 2rem;\n\n  @media (min-width: 1024px) {\n    flex-direction: row;\n    gap: 4rem;\n  }\n`;\n\nconst List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst ListItem = styled.li`\n  line-height: 1.8;\n\n  & > b {\n    font-weight: var(--fw-bold);\n  }\n`;\n\nconst Meta = styled.div`\n  margin-top: 3rem;\n  display: flex;\n  gap: 1.5rem;\n  flex-direction: column;\n  align-items: flex-start;\n\n  & > b {\n    font-weight: var(--fw-bold);\n  }\n\n  @media (min-width: 767px) {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nconst TagGroup = styled.div`\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n`;\n\nconst Tag = styled.span`\n  padding: 0 1rem;\n  background-color: var(--colors-ui-base);\n  box-shadow: var(--shadow);\n  line-height: 1.5;\n  cursor: pointer;\n`;\n\nexport const Info = ({\n  name,\n  nativeName,\n  flag,\n  capital,\n  population,\n  region,\n  subregion,\n  topLevelDomain,\n  currencies = [],\n  languages = [],\n  borders = [],\n  push,\n}) => {\n\n\n\n  const dispatch = useDispatch();\n  const neighbors = useSelector(selectNeighbors)\n  useEffect(() => {\n    if (borders.length) {\n      dispatch(loadNeighborsCountries(borders))\n    }\n  }, [borders, dispatch])\n\n\n\n  return (\n    <Wrapper>\n      <InfoImage src={flag} alt={name} />\n\n      <div>\n        <InfoTitle>{name}</InfoTitle>\n        <ListGroup>\n          <List>\n            <ListItem>\n              <b>Native Name:</b> {nativeName}\n            </ListItem>\n            <ListItem>\n              <b>Population</b> {population}\n            </ListItem>\n            <ListItem>\n              <b>Region:</b> {region}\n            </ListItem>\n            <ListItem>\n              <b>Sub Region:</b> {subregion}\n            </ListItem>\n            <ListItem>\n              <b>Capital:</b> {capital}\n            </ListItem>\n          </List>\n          <List>\n            <ListItem>\n              <b>Top Level Domain</b>{' '}\n              {topLevelDomain.map((d) => (\n                <span key={d}>{d}</span>\n              ))}\n            </ListItem>\n            <ListItem>\n              <b>Currency</b>{' '}\n              {currencies.map((c) => (\n                <span key={c.code}>{c.name} </span>\n              ))}\n            </ListItem>\n            <ListItem>\n              <b>Top Level Domain</b>{' '}\n              {languages.map((l) => (\n                <span key={l.name}>{l.name}</span>\n              ))}\n            </ListItem>\n          </List>\n        </ListGroup>\n        <Meta>\n          <b>Border Countries</b>\n          {!borders.length ? (\n            <span>There is no border countries</span>\n          ) : (\n            <TagGroup>\n              {neighbors.map((countryName) => (\n                <Tag key={countryName} onClick={() => push(`/country/${countryName}`)}>\n                  {countryName}\n                </Tag>\n              ))}\n            </TagGroup>\n          )}\n        </Meta>\n      </div>\n    </Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}