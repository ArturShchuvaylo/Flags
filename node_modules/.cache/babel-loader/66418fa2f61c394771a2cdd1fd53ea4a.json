{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/WEB/Redux \\u0434\\u043B\\u044F \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F \\u0441\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435\\u043C React-\\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0438\\u0306/07 - \\u041F\\u0440\\u043E\\u0435\\u043A\\u0442 2/counties' flag/src/pages/HomePage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { List } from '../components/List';\nimport { Card } from '../components/Card';\nimport { Controls } from '../components/Controls';\nimport { selectCountriesInfo, selectVisiableCountries } from '../store/contries/contries.selector';\nimport { loadCountries } from '../store/contries/contries.action';\nimport { selectControls } from '../store/controls/controls-selector';\nimport { NotFound } from './NotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    search,\n    region\n  } = useSelector(selectControls);\n  const countries = useSelector(state => selectVisiableCountries(state, {\n    search,\n    region\n  }));\n  const {\n    status,\n    error,\n    qty\n  } = useSelector(selectCountriesInfo);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!qty) {\n      dispatch(loadCountries());\n    }\n  }, [qty, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Can't get data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), status === 'received' && /*#__PURE__*/_jsxDEV(List, {\n      children: countries.map(c => {\n        const countryInfo = {\n          img: c.flags.png,\n          name: c.name,\n          info: [{\n            title: 'Population',\n            description: c.population.toLocaleString()\n          }, {\n            title: 'Region',\n            description: c.region\n          }, {\n            title: 'Capital',\n            description: c.capital\n          }]\n        };\n        return /*#__PURE__*/_jsxDEV(Card, {\n          onClick: () => navigate(`/country/${c.name}`),\n          ...countryInfo\n        }, c.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomePage, \"HiijJq14HEzvRUskNNTbZQVnUD8=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/admin/Documents/WEB/Redux для управления состоянием React-приложений/07 - Проект 2/counties' flag/src/pages/HomePage.jsx"],"names":["useNavigate","useDispatch","useSelector","useEffect","List","Card","Controls","selectCountriesInfo","selectVisiableCountries","loadCountries","selectControls","NotFound","HomePage","navigate","search","region","countries","state","status","error","qty","dispatch","map","c","countryInfo","img","flags","png","name","info","title","description","population","toLocaleString","capital"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,mBAAT,EAA8BC,uBAA9B,QAA6D,qCAA7D;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,cAAT,QAA+B,qCAA/B;AACA,SAASC,QAAT,QAAyB,YAAzB;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAE5B,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AAEA,QAAM;AAAEc,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBb,WAAW,CAACQ,cAAD,CAAtC;AAEA,QAAMM,SAAS,GAAGd,WAAW,CAACe,KAAK,IAAIT,uBAAuB,CAACS,KAAD,EAAQ;AAAEH,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAR,CAAjC,CAA7B;AAEA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBlB,WAAW,CAACK,mBAAD,CAA1C;AACA,QAAMc,QAAQ,GAAGpB,WAAW,EAA5B;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACiB,GAAL,EAAU;AACRC,MAAAA,QAAQ,CAACZ,aAAa,EAAd,CAAR;AACD;AACF,GAJQ,EAIN,CAACW,GAAD,EAAMC,QAAN,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFZ,EAKGD,MAAM,KAAK,UAAX,iBACC,QAAC,IAAD;AAAA,gBACGF,SAAS,CAACM,GAAV,CAAeC,CAAD,IAAO;AACpB,cAAMC,WAAW,GAAG;AAClBC,UAAAA,GAAG,EAAEF,CAAC,CAACG,KAAF,CAAQC,GADK;AAElBC,UAAAA,IAAI,EAAEL,CAAC,CAACK,IAFU;AAGlBC,UAAAA,IAAI,EAAE,CACJ;AACEC,YAAAA,KAAK,EAAE,YADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACS,UAAF,CAAaC,cAAb;AAFf,WADI,EAKJ;AACEH,YAAAA,KAAK,EAAE,QADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACR;AAFjB,WALI,EASJ;AACEe,YAAAA,KAAK,EAAE,SADT;AAEEC,YAAAA,WAAW,EAAER,CAAC,CAACW;AAFjB,WATI;AAHY,SAApB;AAmBA,4BACE,QAAC,IAAD;AAEE,UAAA,OAAO,EAAE,MAAMrB,QAAQ,CAAE,YAAWU,CAAC,CAACK,IAAK,EAApB,CAFzB;AAAA,aAGMJ;AAHN,WACOD,CAAC,CAACK,IADT;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OA3BA;AADH;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADF;AA2CD,CA5DM;;GAAMhB,Q;UAEMZ,W,EAEUE,W,EAETA,W,EAEaA,W,EACdD,W;;;KATNW,Q","sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { List } from '../components/List';\nimport { Card } from '../components/Card';\nimport { Controls } from '../components/Controls';\nimport { selectCountriesInfo, selectVisiableCountries } from '../store/contries/contries.selector';\nimport { loadCountries } from '../store/contries/contries.action';\nimport { selectControls } from '../store/controls/controls-selector';\nimport { NotFound } from './NotFound';\n\nexport const HomePage = () => {\n\n  const navigate = useNavigate();\n\n  const { search, region } = useSelector(selectControls);\n\n  const countries = useSelector(state => selectVisiableCountries(state, { search, region }));\n\n  const { status, error, qty } = useSelector(selectCountriesInfo)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (!qty) {\n      dispatch(loadCountries())\n    }\n  }, [qty, dispatch])\n\n  return (\n    <>\n      <Controls />\n      {error && <h2>Can't get data</h2>}\n\n\n      {status === 'received' && (\n        <List>\n          {countries.map((c) => {\n            const countryInfo = {\n              img: c.flags.png,\n              name: c.name,\n              info: [\n                {\n                  title: 'Population',\n                  description: c.population.toLocaleString(),\n                },\n                {\n                  title: 'Region',\n                  description: c.region,\n                },\n                {\n                  title: 'Capital',\n                  description: c.capital,\n                },\n              ],\n            };\n\n            return (\n              <Card\n                key={c.name}\n                onClick={() => navigate(`/country/${c.name}`)}\n                {...countryInfo}\n              />\n            );\n          })}\n        </List>\n\n\n      )}\n\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}