{"ast":null,"code":"// import styled from 'styled-components';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useEffect } from 'react';\n// import { selectNeighbors } from '../store/detailsSlice/details-selector';\n// import { loadNeighborsCountries } from '../store/detailsSlice/details-actions';\n// const Wrapper = styled.section`\n//   margin-top: 3rem;\n//   width: 100%;\n//   display: grid;\n//   grid-template-columns: 100%;\n//   gap: 2rem;\n//   @media (min-width: 767px) {\n//     grid-template-columns: minmax(100px, 400px) 1fr;\n//     align-items: center;\n//     gap: 5rem;\n//   }\n//   @media (min-width: 1024px) {\n//     grid-template-columns: minmax(400px, 600px) 1fr;\n//   }\n// `;\n// const InfoImage = styled.img`\n//   display: block;\n//   width: 100%;\n//   height: 100%;\n//   object-fit: contain;\n// `;\n// const InfoTitle = styled.h1`\n//   margin: 0;\n//   font-weight: var(--fw-normal);\n// `;\n// const ListGroup = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 2rem;\n//   @media (min-width: 1024px) {\n//     flex-direction: row;\n//     gap: 4rem;\n//   }\n// `;\n// const List = styled.ul`\n//   list-style: none;\n//   margin: 0;\n//   padding: 0;\n// `;\n// const ListItem = styled.li`\n//   line-height: 1.8;\n//   & > b {\n//     font-weight: var(--fw-bold);\n//   }\n// `;\n// const Meta = styled.div`\n//   margin-top: 3rem;\n//   display: flex;\n//   gap: 1.5rem;\n//   flex-direction: column;\n//   align-items: flex-start;\n//   & > b {\n//     font-weight: var(--fw-bold);\n//   }\n//   @media (min-width: 767px) {\n//     flex-direction: row;\n//     align-items: center;\n//   }\n// `;\n// const TagGroup = styled.div`\n//   display: flex;\n//   gap: 1rem;\n//   flex-wrap: wrap;\n// `;\n// const Tag = styled.span`\n//   padding: 0 1rem;\n//   background-color: var(--colors-ui-base);\n//   box-shadow: var(--shadow);\n//   line-height: 1.5;\n//   cursor: pointer;\n// `;\n// export const Info = ({\n//   name,\n//   nativeName,\n//   flag,\n//   capital,\n//   population,\n//   region,\n//   subregion,\n//   topLevelDomain,\n//   currencies = [],\n//   languages = [],\n//   borders = [],\n//   push,\n// }) => {\n//   const dispatch = useDispatch();\n//   const neighbors = useSelector(selectNeighbors)\n//   console.log(neighbors);\n//   useEffect(() => {\n//     if (borders.length) {\n//       dispatch(loadNeighborsCountries(borders))\n//     }\n//   }, [borders, dispatch])\n//   return (\n//     <Wrapper>\n//       <InfoImage src={flag} alt={name} />\n//       <div>\n//         <InfoTitle>{name}</InfoTitle>\n//         <ListGroup>\n//           <List>\n//             <ListItem>\n//               <b>Native Name:</b> {nativeName}\n//             </ListItem>\n//             <ListItem>\n//               <b>Population</b> {population}\n//             </ListItem>\n//             <ListItem>\n//               <b>Region:</b> {region}\n//             </ListItem>\n//             <ListItem>\n//               <b>Sub Region:</b> {subregion}\n//             </ListItem>\n//             <ListItem>\n//               <b>Capital:</b> {capital}\n//             </ListItem>\n//           </List>\n//           <List>\n//             <ListItem>\n//               <b>Top Level Domain</b>{' '}\n//               {topLevelDomain.map((d) => (\n//                 <span key={d}>{d}</span>\n//               ))}\n//             </ListItem>\n//             <ListItem>\n//               <b>Currency</b>{' '}\n//               {currencies.map((c) => (\n//                 <span key={c.code}>{c.name} </span>\n//               ))}\n//             </ListItem>\n//             <ListItem>\n//               <b>Top Level Domain</b>{' '}\n//               {languages.map((l) => (\n//                 <span key={l.name}>{l.name}</span>\n//               ))}\n//             </ListItem>\n//           </List>\n//         </ListGroup>\n//         <Meta>\n//           <b>Border Countries</b>\n//           {!borders.length ? (\n//             <span>There is no border countries</span>\n//           ) : (\n//             <TagGroup>\n//               {neighbors.map((countryName) => (\n//                 <Tag key={countryName} onClick={() => push(`/country/${countryName}`)}>\n//                   {countryName}\n//                 </Tag>\n//               ))}\n//             </TagGroup>\n//           )}\n//         </Meta>\n//       </div>\n//     </Wrapper>\n//   );\n// };","map":{"version":3,"sources":["/Users/admin/Documents/WEB/React/countries' flag/src/components/Info.jsx"],"names":[],"mappingssourcesContent":["// import styled from 'styled-components';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useEffect } from 'react';\n// import { selectNeighbors } from '../store/detailsSlice/details-selector';\n// import { loadNeighborsCountries } from '../store/detailsSlice/details-actions';\n\n// const Wrapper = styled.section`\n//   margin-top: 3rem;\n//   width: 100%;\n//   display: grid;\n//   grid-template-columns: 100%;\n//   gap: 2rem;\n\n//   @media (min-width: 767px) {\n//     grid-template-columns: minmax(100px, 400px) 1fr;\n//     align-items: center;\n//     gap: 5rem;\n//   }\n//   @media (min-width: 1024px) {\n//     grid-template-columns: minmax(400px, 600px) 1fr;\n//   }\n// `;\n\n// const InfoImage = styled.img`\n//   display: block;\n//   width: 100%;\n//   height: 100%;\n//   object-fit: contain;\n// `;\n\n// const InfoTitle = styled.h1`\n//   margin: 0;\n//   font-weight: var(--fw-normal);\n// `;\n\n// const ListGroup = styled.div`\n//   display: flex;\n//   flex-direction: column;\n\n//   gap: 2rem;\n\n//   @media (min-width: 1024px) {\n//     flex-direction: row;\n//     gap: 4rem;\n//   }\n// `;\n\n// const List = styled.ul`\n//   list-style: none;\n//   margin: 0;\n//   padding: 0;\n// `;\n\n// const ListItem = styled.li`\n//   line-height: 1.8;\n\n//   & > b {\n//     font-weight: var(--fw-bold);\n//   }\n// `;\n\n// const Meta = styled.div`\n//   margin-top: 3rem;\n//   display: flex;\n//   gap: 1.5rem;\n//   flex-direction: column;\n//   align-items: flex-start;\n\n//   & > b {\n//     font-weight: var(--fw-bold);\n//   }\n\n//   @media (min-width: 767px) {\n//     flex-direction: row;\n//     align-items: center;\n//   }\n// `;\n\n// const TagGroup = styled.div`\n//   display: flex;\n//   gap: 1rem;\n//   flex-wrap: wrap;\n// `;\n\n// const Tag = styled.span`\n//   padding: 0 1rem;\n//   background-color: var(--colors-ui-base);\n//   box-shadow: var(--shadow);\n//   line-height: 1.5;\n//   cursor: pointer;\n// `;\n\n// export const Info = ({\n//   name,\n//   nativeName,\n//   flag,\n//   capital,\n//   population,\n//   region,\n//   subregion,\n//   topLevelDomain,\n//   currencies = [],\n//   languages = [],\n//   borders = [],\n//   push,\n// }) => {\n\n\n\n//   const dispatch = useDispatch();\n//   const neighbors = useSelector(selectNeighbors)\n//   console.log(neighbors);\n\n//   useEffect(() => {\n//     if (borders.length) {\n//       dispatch(loadNeighborsCountries(borders))\n//     }\n//   }, [borders, dispatch])\n\n\n\n//   return (\n//     <Wrapper>\n//       <InfoImage src={flag} alt={name} />\n\n//       <div>\n//         <InfoTitle>{name}</InfoTitle>\n//         <ListGroup>\n//           <List>\n//             <ListItem>\n//               <b>Native Name:</b> {nativeName}\n//             </ListItem>\n//             <ListItem>\n//               <b>Population</b> {population}\n//             </ListItem>\n//             <ListItem>\n//               <b>Region:</b> {region}\n//             </ListItem>\n//             <ListItem>\n//               <b>Sub Region:</b> {subregion}\n//             </ListItem>\n//             <ListItem>\n//               <b>Capital:</b> {capital}\n//             </ListItem>\n//           </List>\n//           <List>\n//             <ListItem>\n//               <b>Top Level Domain</b>{' '}\n//               {topLevelDomain.map((d) => (\n//                 <span key={d}>{d}</span>\n//               ))}\n//             </ListItem>\n//             <ListItem>\n//               <b>Currency</b>{' '}\n//               {currencies.map((c) => (\n//                 <span key={c.code}>{c.name} </span>\n//               ))}\n//             </ListItem>\n//             <ListItem>\n//               <b>Top Level Domain</b>{' '}\n//               {languages.map((l) => (\n//                 <span key={l.name}>{l.name}</span>\n//               ))}\n//             </ListItem>\n//           </List>\n//         </ListGroup>\n//         <Meta>\n//           <b>Border Countries</b>\n//           {!borders.length ? (\n//             <span>There is no border countries</span>\n//           ) : (\n//             <TagGroup>\n//               {neighbors.map((countryName) => (\n//                 <Tag key={countryName} onClick={() => push(`/country/${countryName}`)}>\n//                   {countryName}\n//                 </Tag>\n//               ))}\n//             </TagGroup>\n//           )}\n//         </Meta>\n//       </div>\n//     </Wrapper>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}