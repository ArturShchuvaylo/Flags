{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const loadCountryByName = createAsyncThunk('loadCountryByName', (name, _ref) => {\n  let {\n    extra: {\n      client,\n      api\n    }\n  } = _ref;\n  return client.get(api.searchByCountry(name));\n});\nexport const loadNeighborsCountries = createAsyncThunk('loadNeighborsCountries', (border, _ref2) => {\n  let {\n    extra: {\n      client,\n      api\n    }\n  } = _ref2;\n  return client.get(api.filterByCode(border));\n});\nconst initialState = {\n  currentCountry: null,\n  status: 'idle',\n  error: null,\n  neighbors: []\n};\nexport const detailsSlice = createSlice({\n  name: 'details',\n  initialState,\n  reducers: {\n    clearDetails: () => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(loadCountryByName.pending, (state, action) => {\n      state.status = 'loading';\n    }).addCase(loadCountryByName.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.currentCountry = action.payload.data[0];\n    }).addCase(loadCountryByName.rejected, (state, action) => {\n      state.status = 'rejected';\n      state.error = action.payload;\n    }).addCase(loadNeighborsCountries.fulfilled, (state, action) => {\n      state.neighbors = action.payload.data.map(elem => elem.name);\n    });\n  }\n});\nexport const {\n  clearDetails\n} = detailsSlice.actions;\nexport const detailsReducer = detailsSlice.reducer;\nexport const selectCurrentCountry = state => state.details.currentCountry;\nexport const selectDetails = state => state.details;\nexport const selectNeighbors = state => state.details.neighbors;","map":{"version":3,"sources":["/Users/admin/Documents/WEB/React/FlagsOfCountries/src/store/detailsSlice/detailsSlice.js"],"names":["createAsyncThunk","createSlice","loadCountryByName","name","extra","client","api","get","searchByCountry","loadNeighborsCountries","border","filterByCode","initialState","currentCountry","status","error","neighbors","detailsSlice","reducers","clearDetails","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","data","rejected","map","elem","actions","detailsReducer","reducer","selectCurrentCountry","details","selectDetails","selectNeighbors"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,iBAAiB,GAAGF,gBAAgB,CAC7C,mBAD6C,EAE7C,CAACG,IAAD,WAA6B;AAAA,MAAvB;AAACC,IAAAA,KAAK,EAAC;AAACC,MAAAA,MAAD;AAAQC,MAAAA;AAAR;AAAP,GAAuB;AACzB,SAAOD,MAAM,CAACE,GAAP,CAAWD,GAAG,CAACE,eAAJ,CAAoBL,IAApB,CAAX,CAAP;AACH,CAJ4C,CAA1C;AAMP,OAAO,MAAMM,sBAAsB,GAAIT,gBAAgB,CACnD,wBADmD,EAEnD,CAACU,MAAD,YAA+B;AAAA,MAAvB;AAACN,IAAAA,KAAK,EAAC;AAACC,MAAAA,MAAD;AAAQC,MAAAA;AAAR;AAAP,GAAuB;AAC3B,SAAOD,MAAM,CAACE,GAAP,CAAWD,GAAG,CAACK,YAAJ,CAAkBD,MAAlB,CAAX,CAAP;AACH,CAJkD,CAAhD;AAOP,MAAME,YAAY,GAAG;AAClBC,EAAAA,cAAc,EAAE,IADE;AAElBC,EAAAA,MAAM,EAAC,MAFW;AAGlBC,EAAAA,KAAK,EAAE,IAHW;AAIlBC,EAAAA,SAAS,EAAC;AAJQ,CAArB;AAOA,OAAO,MAAMC,YAAY,GAAGhB,WAAW,CAAC;AACpCE,EAAAA,IAAI,EAAC,SAD+B;AAEpCS,EAAAA,YAFoC;AAGpCM,EAAAA,QAAQ,EAAC;AACLC,IAAAA,YAAY,EAAC,MAAIP;AADZ,GAH2B;AAMpCQ,EAAAA,aAAa,EAAEC,OAAD,IAAW;AACrBA,IAAAA,OAAO,CACNC,OADD,CACSpB,iBAAiB,CAACqB,OAD3B,EACmC,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAChDD,MAAAA,KAAK,CAACV,MAAN,GAAa,SAAb;AACH,KAHD,EAICQ,OAJD,CAISpB,iBAAiB,CAACwB,SAJ3B,EAIqC,CAACF,KAAD,EAAQC,MAAR,KAAiB;AAClDD,MAAAA,KAAK,CAACV,MAAN,GAAa,MAAb;AACAU,MAAAA,KAAK,CAACX,cAAN,GAAqBY,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoB,CAApB,CAArB;AACH,KAPD,EAQCN,OARD,CAQSpB,iBAAiB,CAAC2B,QAR3B,EAQoC,CAACL,KAAD,EAAQC,MAAR,KAAiB;AACjDD,MAAAA,KAAK,CAACV,MAAN,GAAa,UAAb;AACAU,MAAAA,KAAK,CAACT,KAAN,GAAYU,MAAM,CAACE,OAAnB;AACH,KAXD,EAYCL,OAZD,CAYSb,sBAAsB,CAACiB,SAZhC,EAY0C,CAACF,KAAD,EAAQC,MAAR,KAAiB;AACvDD,MAAAA,KAAK,CAACR,SAAN,GAAkBS,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBE,GAApB,CAAwBC,IAAI,IAAEA,IAAI,CAAC5B,IAAnC,CAAlB;AAEH,KAfD;AAgBH;AAvBmC,CAAD,CAAhC;AA0BP,OAAO,MAAM;AAACgB,EAAAA;AAAD,IAAiBF,YAAY,CAACe,OAApC;AACP,OAAO,MAAMC,cAAc,GAAEhB,YAAY,CAACiB,OAAnC;AAIP,OAAO,MAAMC,oBAAoB,GAAEX,KAAD,IAASA,KAAK,CAACY,OAAN,CAAcvB,cAAlD;AACP,OAAO,MAAMwB,aAAa,GAAIb,KAAD,IAASA,KAAK,CAACY,OAArC;AACP,OAAO,MAAME,eAAe,GAAId,KAAD,IAASA,KAAK,CAACY,OAAN,CAAcpB,SAA/C","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const loadCountryByName = createAsyncThunk(\n    'loadCountryByName',\n    (name,{extra:{client,api}})=>{\n        return client.get(api.searchByCountry(name))\n    }\n)\nexport const loadNeighborsCountries  = createAsyncThunk(\n    'loadNeighborsCountries',\n    (border,{extra:{client,api}})=>{\n        return client.get(api.filterByCode (border))\n    }\n)\n\nconst initialState = {\n   currentCountry: null,\n   status:'idle',\n   error: null, \n   neighbors:[],\n}\n\nexport const detailsSlice = createSlice({\n    name:'details',\n    initialState,\n    reducers:{\n        clearDetails:()=>initialState,\n    },\n    extraReducers:(builder)=>{\n        builder\n        .addCase(loadCountryByName.pending,(state, action)=>{\n            state.status='loading';\n        })\n        .addCase(loadCountryByName.fulfilled,(state, action)=>{\n            state.status='idle';\n            state.currentCountry=action.payload.data[0];\n        })\n        .addCase(loadCountryByName.rejected,(state, action)=>{\n            state.status='rejected';\n            state.error=action.payload;\n        })\n        .addCase(loadNeighborsCountries.fulfilled,(state, action)=>{\n            state.neighbors = action.payload.data.map(elem=>elem.name)\n            \n        })\n    }\n})\n\nexport const {clearDetails} = detailsSlice.actions;\nexport const detailsReducer =detailsSlice.reducer;\n\n\n\nexport const selectCurrentCountry=(state)=>state.details.currentCountry;\nexport const selectDetails = (state)=>state.details;\nexport const selectNeighbors = (state)=>state.details.neighbors;"]},"metadata":{},"sourceType":"module"}